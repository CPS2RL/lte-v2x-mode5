# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    ltev2x_module_dependencies = ['core', 'network', 'spectrum', 'stats', 'buildings', 'virtual-net-device','point-to-point','applications','internet','csma']

    module = bld.create_ns3_module('lte-v2x', ltev2x_module_dependencies)
    module.source = [
        'model/lte-v2x.cc',
        'model/lte-v2x-vehicle-functions.cc',
        'model/lte-v2x-sinr-mapping.cc',
        'helper/lte-v2x-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('lte-v2x')
    module_test.source = [
        'test/lte-v2x-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'lte-v2x'
    headers.source = [
        'model/lte-v2x.h',
        'helper/lte-v2x-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()
